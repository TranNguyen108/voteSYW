T√¥i ƒë√£ xem x√©t code c·ªßa b·∫°n v√† nh·∫≠n th·∫•y m·ªôt s·ªë v·∫•n ƒë·ªÅ c·∫ßn s·ª≠a ƒë·ªÉ ƒë·∫£m b·∫£o code ho·∫°t ƒë·ªông ƒë√∫ng v√† t·ªëi ∆∞u h∆°n. D∆∞·ªõi ƒë√¢y l√† c√°c l·ªói v√† c√°ch kh·∫Øc ph·ª•c, gi·ªØ nguy√™n c·∫•u tr√∫c v√† ch·ª©c nƒÉng hi·ªán c√≥:

### C√°c l·ªói v√† c√°ch s·ª≠a

1. **Thi·∫øu x·ª≠ l√Ω s·ª± ki·ªán cho c√°c n√∫t ch·ªânh s·ª≠a ƒë·ªôi thi**:
   - C√°c n√∫t "S·ª≠a" (`edit-team-btn`) kh√¥ng c√≥ s·ª± ki·ªán ƒë∆∞·ª£c g·∫Øn ƒë·ªÉ m·ªü modal ch·ªânh s·ª≠a. D·ªØ li·ªáu `data-team-id`, `data-team-name`, `data-team-description` ƒë∆∞·ª£c khai b√°o nh∆∞ng kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong h√†m `editTeam`.
   - **S·ª≠a l·ªói**: Th√™m s·ª± ki·ªán click cho c√°c n√∫t ch·ªânh s·ª≠a ƒë·ªÉ g·ªçi h√†m `editTeam`.

2. **Thi·∫øu n√∫t Export trong giao di·ªán**:
   - H√†m `exportData` ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a nh∆∞ng kh√¥ng c√≥ n√∫t n√†o trong giao di·ªán ƒë·ªÉ g·ªçi h√†m n√†y.
   - **S·ª≠a l·ªói**: Th√™m n√∫t Export v√†o ph·∫ßn "Qu·∫£n l√Ω ƒë·ªôi thi" ho·∫∑c "ƒêi·ªÅu khi·ªÉn h·ªá th·ªëng".

3. **Ch·ª©c nƒÉng import ch∆∞a ho√†n thi·ªán**:
   - H√†m `importData` hi·ªán ch·ªâ hi·ªÉn th·ªã th√¥ng b√°o r·∫±ng ch·ª©c nƒÉng s·∫Ω ƒë∆∞·ª£c b·ªï sung sau. ƒêi·ªÅu n√†y kh√¥ng ph√π h·ª£p v·ªõi m·ªôt h·ªá th·ªëng ho√†n ch·ªânh.
   - **S·ª≠a l·ªói**: Th√™m logic x·ª≠ l√Ω file JSON ƒë·ªÉ import d·ªØ li·ªáu ƒë·ªôi thi.

4. **C·∫≠p nh·∫≠t th·ªëng k√™ kh√¥ng l·∫•y d·ªØ li·ªáu th·ª±c t·∫ø**:
   - H√†m `loadStats` hi·ªán ch·ªâ hi·ªÉn th·ªã d·ªØ li·ªáu tƒ©nh (s·ªë votes v√† t·ª∑ l·ªá ƒë·ªÅu l√† 0). C·∫ßn g·ªçi API ƒë·ªÉ l·∫•y d·ªØ li·ªáu th·ª±c t·∫ø t·ª´ server.
   - **S·ª≠a l·ªói**: Th√™m logic g·ªçi API ƒë·ªÉ l·∫•y s·ªë li·ªáu th·ªëng k√™.

5. **Thi·∫øu ki·ªÉm tra v√† x·ª≠ l√Ω l·ªói trong c√°c h√†m g·ªçi API**:
   - C√°c h√†m `startVoting`, `stopVoting`, `resetVotes` kh√¥ng x·ª≠ l√Ω ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng h·ª£p l·ªói t·ª´ server (v√≠ d·ª•: m√£ l·ªói HTTP c·ª• th·ªÉ).
   - **S·ª≠a l·ªói**: Th√™m ki·ªÉm tra tr·∫°ng th√°i response v√† th√¥ng b√°o l·ªói chi ti·∫øt h∆°n.

6. **Thi·∫øu c·∫≠p nh·∫≠t s·ªë votes trong b·∫£ng ƒë·ªôi thi**:
   - C√°c ph·∫ßn t·ª≠ `votes-<%= team._id %>` trong b·∫£ng ƒë·ªôi thi kh√¥ng ƒë∆∞·ª£c c·∫≠p nh·∫≠t khi g·ªçi `loadStats`.
   - **S·ª≠a l·ªói**: C·∫≠p nh·∫≠t s·ªë votes trong h√†m `loadStats`.

7. **Kh√¥ng t·ªëi ∆∞u h√≥a vi·ªác ƒë√≥ng modal**:
   - Vi·ªác ƒë√≥ng modal b·∫±ng c√°ch click ra ngo√†i ch·ªâ ƒë∆∞·ª£c x·ª≠ l√Ω qua s·ª± ki·ªán click tr√™n to√†n b·ªô modal. ƒêi·ªÅu n√†y c√≥ th·ªÉ g√¢y ra v·∫•n ƒë·ªÅ n·∫øu c√≥ c√°c ph·∫ßn t·ª≠ con c·∫ßn x·ª≠ l√Ω s·ª± ki·ªán ri√™ng.
   - **S·ª≠a l·ªói**: C·∫£i thi·ªán logic ƒë√≥ng modal ƒë·ªÉ ch·ªâ ƒë√≥ng khi click v√†o n·ªÅn (backdrop).

8. **C·∫£nh b√°o b·∫£o m·∫≠t v·ªõi `confirm`**:
   - C√°c h√†m s·ª≠ d·ª•ng `confirm` (nh∆∞ `resetVotes`, `startVoting`, `stopVoting`, `bulkDeleteTeams`) kh√¥ng cung c·∫•p th√¥ng tin chi ti·∫øt, c√≥ th·ªÉ g√¢y nh·∫ßm l·∫´n cho ng∆∞·ªùi d√πng.
   - **S·ª≠a l·ªói**: T√πy ch·ªânh th√¥ng b√°o ƒë·ªÉ r√µ r√†ng h∆°n.

### Code ƒë√£ s·ª≠a

D∆∞·ªõi ƒë√¢y l√† code ƒë√£ ƒë∆∞·ª£c s·ª≠a, gi·ªØ nguy√™n c·∫•u tr√∫c v√† c√°c ch·ª©c nƒÉng hi·ªán c√≥:

```html
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - H·ªá th·ªëng B√¨nh ch·ªçn</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="min-h-screen bg-gradient-to-br from-slate-800 via-gray-900 to-slate-900">
    <div class="min-h-screen py-8 px-4">
        <div class="max-w-7xl mx-auto">
            <!-- Header -->
            <div class="flex items-center justify-between mb-8">
                <h1 class="text-4xl md:text-5xl font-bold text-white">
                    üîß Admin Dashboard
                </h1>
                <div class="flex space-x-4">
                    <a href="/" class="inline-flex items-center bg-white/20 backdrop-blur-lg rounded-full px-6 py-3 text-white hover:bg-white/30 transition-all duration-300">
                        <i class="fas fa-home mr-2"></i>Trang ch·ªß
                    </a>
                    <a href="/result" class="inline-flex items-center bg-blue-500/20 backdrop-blur-lg rounded-full px-6 py-3 text-blue-300 hover:bg-blue-500/30 transition-all duration-300">
                        <i class="fas fa-chart-bar mr-2"></i>K·∫øt qu·∫£
                    </a>
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-blue-500/20 backdrop-blur-lg rounded-2xl p-6 border border-blue-300/30">
                    <div class="flex items-center">
                        <i class="fas fa-users text-3xl text-blue-300 mr-4"></i>
                        <div>
                            <div class="text-3xl font-bold text-white"><%= teams.length %></div>
                            <div class="text-blue-200 text-sm">ƒê·ªôi thi</div>
                        </div>
                    </div>
                </div>
                <div class="bg-green-500/20 backdrop-blur-lg rounded-2xl p-6 border border-green-300/30">
                    <div class="flex items-center">
                        <i class="fas fa-vote-yea text-3xl text-green-300 mr-4"></i>
                        <div>
                            <div id="totalVotes" class="text-3xl font-bold text-white">-</div>
                            <div class="text-green-200 text-sm">T·ªïng votes</div>
                        </div>
                    </div>
                </div>
                <div class="bg-yellow-500/20 backdrop-blur-lg rounded-2xl p-6 border border-yellow-300/30">
                    <div class="flex items-center">
                        <i class="fas fa-clock text-3xl text-yellow-300 mr-4"></i>
                        <div>
                            <div class="text-3xl font-bold text-white"><%= voteDuration %></div>
                            <div class="text-yellow-200 text-sm">Ph√∫t/phi√™n</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Control Panel -->
            <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 shadow-2xl mb-8">
                <h2 class="text-2xl font-bold text-white mb-6">‚öôÔ∏è ƒêi·ªÅu khi·ªÉn h·ªá th·ªëng</h2>
                <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
                    <form action="/admin/config" method="POST" class="contents">
                        <div>
                            <label for="voteDuration" class="block text-sm font-medium text-gray-300 mb-2">
                                Th·ªùi gian vote (ph√∫t):
                            </label>
                            <input type="number" 
                                   class="w-full px-4 py-3 bg-white/20 border border-white/30 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                                   id="voteDuration" 
                                   name="voteDuration" 
                                   value="<%= voteDuration %>" 
                                   min="1" 
                                   max="60" 
                                   required>
                        </div>
                        <div class="flex items-end">
                            <button type="submit" class="w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105">
                                <i class="fas fa-save mr-2"></i>L∆∞u
                            </button>
                        </div>
                    </form>
                    <div class="flex items-end">
                        <button onclick="startVoting()" class="w-full bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105">
                            <i class="fas fa-play mr-2"></i>B·∫Øt ƒë·∫ßu
                        </button>
                    </div>
                    <div class="flex items-end">
                        <button onclick="stopVoting()" class="w-full bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105">
                            <i class="fas fa-stop mr-2"></i>D·ª´ng vote
                        </button>
                    </div>
                </div>
                <div class="grid md:grid-cols-4 gap-6 mt-6">
                    <button onclick="loadStats()" class="bg-cyan-500 hover:bg-cyan-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105">
                        <i class="fas fa-sync-alt mr-2"></i>L√†m m·ªõi
                    </button>
                    <button onclick="exportData()" class="bg-indigo-500 hover:bg-indigo-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105">
                        <i class="fas fa-download mr-2"></i>Export
                    </button>
                    <button onclick="showImportModal()" class="bg-indigo-500 hover:bg-indigo-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105">
                        <i class="fas fa-upload mr-2"></i>Import
                    </button>
                </div>
            </div>

            <!-- Add Team Section -->
            <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 shadow-2xl mb-8">
                <h2 class="text-2xl font-bold text-white mb-6">‚ûï Th√™m ƒë·ªôi thi m·ªõi</h2>
                <form action="/admin/teams" method="POST">
                    <div class="grid md:grid-cols-4 gap-6">
                        <div>
                            <label for="teamName" class="block text-sm font-medium text-gray-300 mb-2">T√™n ƒë·ªôi:</label>
                            <input type="text" 
                                   class="w-full px-4 py-3 bg-white/20 border border-white/30 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" 
                                   id="teamName" 
                                   name="name" 
                                   placeholder="Nh·∫≠p t√™n ƒë·ªôi thi" 
                                   required>
                        </div>
                        <div class="md:col-span-2">
                            <label for="teamDescription" class="block text-sm font-medium text-gray-300 mb-2">M√¥ t·∫£:</label>
                            <input type="text" 
                                   class="w-full px-4 py-3 bg-white/20 border border-white/30 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" 
                                   id="teamDescription" 
                                   name="description" 
                                   placeholder="M√¥ t·∫£ v·ªÅ ƒë·ªôi thi (t√πy ch·ªçn)">
                        </div>
                        <div class="flex items-end">
                            <button type="submit" class="w-full bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105">
                                <i class="fas fa-plus mr-2"></i>Th√™m ƒë·ªôi
                            </button>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Teams Management -->
            <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 shadow-2xl mb-8">
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-2xl font-bold text-white">üìã Qu·∫£n l√Ω ƒë·ªôi thi (<%= teams.length %> ƒë·ªôi)</h2>
                    <div class="flex space-x-4">
                        <button onclick="selectAllTeams()" class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-300 px-4 py-2 rounded-xl transition-all duration-300">
                            <i class="fas fa-check-square mr-2"></i>Ch·ªçn t·∫•t c·∫£
                        </button>
                        <button onclick="bulkDeleteTeams()" class="bg-red-500/20 hover:bg-red-500/30 text-red-300 px-4 py-2 rounded-xl transition-all duration-300">
                            <i class="fas fa-trash mr-2"></i>X√≥a nhi·ªÅu
                        </button>
                    </div>
                </div>
                
                <% if (teams.length === 0) { %>
                    <div class="text-center py-12">
                        <i class="fas fa-users text-6xl text-gray-500 mb-4"></i>
                        <h3 class="text-xl font-semibold text-gray-400 mb-2">Ch∆∞a c√≥ ƒë·ªôi thi n√†o</h3>
                        <p class="text-gray-500">H√£y th√™m ƒë·ªôi thi ƒë·∫ßu ti√™n b·∫±ng form ·ªü tr√™n!</p>
                    </div>
                <% } else { %>
                    <div class="overflow-hidden rounded-xl">
                        <table class="w-full bg-white">
                            <thead class="bg-gradient-to-r from-blue-600 to-purple-600 text-white">
                                <tr>
                                    <th class="px-6 py-4 text-left font-bold">
                                        <input type="checkbox" id="selectAll" class="rounded">
                                    </th>
                                    <th class="px-6 py-4 text-left font-bold">#</th>
                                    <th class="px-6 py-4 text-left font-bold">T√™n ƒë·ªôi</th>
                                    <th class="px-6 py-4 text-left font-bold">M√¥ t·∫£</th>
                                    <th class="px-6 py-4 text-left font-bold">Ng√†y t·∫°o</th>
                                    <th class="px-6 py-4 text-center font-bold">Votes</th>
                                    <th class="px-6 py-4 text-center font-bold">Thao t√°c</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% teams.forEach((team, index) => { %>
                                    <tr class="border-b border-gray-100 hover:bg-gray-50 transition-colors duration-200">
                                        <td class="px-6 py-4">
                                            <input type="checkbox" class="team-checkbox rounded" value="<%= team._id %>">
                                        </td>
                                        <td class="px-6 py-4">
                                            <span class="inline-flex items-center justify-center w-8 h-8 bg-blue-100 text-blue-600 rounded-full font-bold">
                                                <%= index + 1 %>
                                            </span>
                                        </td>
                                        <td class="px-6 py-4">
                                            <div class="font-semibold text-gray-800"><%= team.name %></div>
                                        </td>
                                        <td class="px-6 py-4">
                                            <span class="text-gray-600"><%= team.description || 'Kh√¥ng c√≥ m√¥ t·∫£' %></span>
                                        </td>
                                        <td class="px-6 py-4">
                                            <span class="text-gray-500 text-sm"><%= new Date(team.createdAt).toLocaleDateString('vi-VN') %></span>
                                        </td>
                                        <td class="px-6 py-4 text-center">
                                            <span id="votes-<%= team._id %>" class="inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                                -
                                            </span>
                                        </td>
                                        <td class="px-6 py-4">
                                            <div class="flex items-center justify-center space-x-2">
                                                <button class="edit-team-btn bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded-lg text-sm transition-all duration-300"
                                                        data-team-id="<%= team._id %>" 
                                                        data-team-name="<%= team.name %>" 
                                                        data-team-description="<%= team.description || '' %>">
                                                    <i class="fas fa-edit mr-1"></i>S·ª≠a
                                                </button>
                                                <form method="POST" action="/admin/teams/<%= team._id %>/delete" class="inline" 
                                                      onsubmit="return confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ƒë·ªôi <%= team.name %>? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!')">
                                                    <button type="submit" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-lg text-sm transition-all duration-300">
                                                        <i class="fas fa-trash mr-1"></i>X√≥a
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                <% } %>
            </div>

            <!-- Statistics Panel -->
            <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 shadow-2xl mb-8">
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-2xl font-bold text-white">üìä Th·ªëng k√™ chi ti·∫øt</h2>
                    <button onclick="loadStats()" class="bg-blue-500/20 hover:bg-blue-500/30 text-blue-300 px-4 py-2 rounded-xl transition-all duration-300">
                        <i class="fas fa-sync-alt mr-2"></i>L√†m m·ªõi
                    </button>
                </div>
                <div id="statsContainer">
                    <div class="text-center text-gray-400">
                        <div class="inline-block animate-spin w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full mb-4"></div>
                        <p>ƒêang t·∫£i th·ªëng k√™...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Team Modal -->
    <div id="editTeamModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden items-center justify-center z-50">
        <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 shadow-2xl max-w-md w-full mx-4">
            <h3 class="text-2xl font-bold text-white mb-6">‚úèÔ∏è Ch·ªânh s·ª≠a ƒë·ªôi thi</h3>
            <form id="editTeamForm" method="POST">
                <div class="space-y-4">
                    <div>
                        <label for="editTeamName" class="block text-sm font-medium text-gray-300 mb-2">T√™n ƒë·ªôi:</label>
                        <input type="text" 
                               class="w-full px-4 py-3 bg-white/20 border border-white/30 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               id="editTeamName" 
                               name="name" 
                               required>
                    </div>
                    <div>
                        <label for="editTeamDescription" class="block text-sm font-medium text-gray-300 mb-2">M√¥ t·∫£:</label>
                        <input type="text" 
                               class="w-full px-4 py-3 bg-white/20 border border-white/30 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               id="editTeamDescription" 
                               name="description">
                    </div>
                </div>
                <div class="flex space-x-4 mt-6">
                    <button type="button" onclick="closeEditModal()" class="flex-1 bg-gray-500 hover:bg-gray-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300">
                        H·ªßy
                    </button>
                    <button type="submit" class="flex-1 bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300">
                        <i class="fas fa-save mr-2"></i>L∆∞u
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Import Modal -->
    <div id="importModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden items-center justify-center z-50">
        <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 shadow-2xl max-w-md w-full mx-4">
            <h3 class="text-2xl font-bold text-white mb-6">üì§ Import d·ªØ li·ªáu</h3>
            <div class="space-y-4">
                <div>
                    <label for="importFile" class="block text-sm font-medium text-gray-300 mb-2">Ch·ªçn file JSON:</label>
                    <input type="file" 
                           class="w-full px-4 py-3 bg-white/20 border border-white/30 rounded-xl text-white file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100" 
                           id="importFile" 
                           accept=".json">
                </div>
            </div>
            <div class="flex space-x-4 mt-6">
                <button type="button" onclick="closeImportModal()" class="flex-1 bg-gray-500 hover:bg-gray-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300">
                    H·ªßy
                </button>
                <button onclick="importData()" class="flex-1 bg-indigo-500 hover:bg-indigo-600 text-white font-bold py-3 px-6 rounded-xl transition-all duration-300">
                    <i class="fas fa-upload mr-2"></i>Import
                </button>
            </div>
        </div>
    </div>

    <script>
        // Store data for JavaScript use
        const teamsData = <%- JSON.stringify(teams) %>;
        const voteDurationValue = <%= voteDuration %>;

        // Edit Team Functions
        function editTeam(id, name, description) {
            document.getElementById('editTeamForm').action = `/admin/teams/${id}`;
            document.getElementById('editTeamName').value = name;
            document.getElementById('editTeamDescription').value = description || '';
            document.getElementById('editTeamModal').classList.remove('hidden');
            document.getElementById('editTeamModal').classList.add('flex');
        }

        function closeEditModal() {
            document.getElementById('editTeamModal').classList.add('hidden');
            document.getElementById('editTeamModal').classList.remove('flex');
        }

        // Control Functions
        function resetVotes() {
            if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a T·∫§T C·∫¢ l∆∞·ª£t b√¨nh ch·ªçn? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c v√† s·∫Ω ·∫£nh h∆∞·ªüng ƒë·∫øn to√†n b·ªô th·ªëng k√™!')) {
                fetch('/admin/reset-votes', { 
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => {
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert('ƒê√£ reset t·∫•t c·∫£ votes th√†nh c√¥ng!');
                        loadStats();
                    } else {
                        throw new Error(data.message || 'L·ªói khi reset votes');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(`L·ªói khi reset votes: ${error.message}`);
                });
            }
        }

        function startVoting() {
            if (confirm('B·∫°n c√≥ mu·ªën b·∫Øt ƒë·∫ßu m·ªôt phi√™n b√¨nh ch·ªçn m·ªõi? C√°c l∆∞·ª£t vote tr∆∞·ªõc s·∫Ω ƒë∆∞·ª£c gi·ªØ nguy√™n.')) {
                fetch('/admin/voting/start', { 
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => {
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert('ƒê√£ b·∫Øt ƒë·∫ßu phi√™n b√¨nh ch·ªçn th√†nh c√¥ng!');
                    } else {
                        throw new Error(data.message || 'L·ªói khi b·∫Øt ƒë·∫ßu vote');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(`L·ªói khi b·∫Øt ƒë·∫ßu vote: ${error.message}`);
                });
            }
        }

        function stopVoting() {
            if (confirm('B·∫°n c√≥ mu·ªën d·ª´ng phi√™n b√¨nh ch·ªçn hi·ªán t·∫°i? Ng∆∞·ªùi d√πng s·∫Ω kh√¥ng th·ªÉ vote th√™m.')) {
                fetch('/admin/voting/stop', { 
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                })
                .then(response => {
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert('ƒê√£ d·ª´ng phi√™n b√¨nh ch·ªçn th√†nh c√¥ng!');
                    } else {
                        throw new Error(data.message || 'L·ªói khi d·ª´ng vote');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(`L·ªói khi d·ª´ng vote: ${error.message}`);
                });
            }
        }

        // Export/Import Functions
        function exportData() {
            const exportData = {
                timestamp: new Date().toISOString(),
                teams: teamsData,
                voteDuration: voteDurationValue,
                stats: {}
            };
            
            const blob = new Blob([JSON.stringify(exportData, null, 2)], {type: 'application/json'});
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `voting_data_${Date.now()}.json`;
            a.click();
            URL.revokeObjectURL(url);
        }

        function showImportModal() {
            document.getElementById('importModal').classList.remove('hidden');
            document.getElementById('importModal').classList.add('flex');
        }

        function closeImportModal() {
            document.getElementById('importModal').classList.add('hidden');
            document.getElementById('importModal').classList.remove('flex');
            document.getElementById('importFile').value = '';
        }

        function importData() {
            const fileInput = document.getElementById('importFile');
            if (!fileInput.files.length) {
                alert('Vui l√≤ng ch·ªçn m·ªôt file JSON ƒë·ªÉ import!');
                return;
            }

            const file = fileInput.files[0];
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const data = JSON.parse(e.target.result);
                    if (!data.teams || !Array.isArray(data.teams)) {
                        throw new Error('File JSON kh√¥ng h·ª£p l·ªá! C·∫ßn ch·ª©a m·∫£ng teams.');
                    }

                    fetch('/admin/import-teams', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ teams: data.teams })
                    })
                    .then(response => {
                        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            alert('ƒê√£ import d·ªØ li·ªáu th√†nh c√¥ng! ƒêang t·∫£i l·∫°i trang...');
                            window.location.reload();
                        } else {
                            throw new Error(data.message || 'L·ªói khi import d·ªØ li·ªáu');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert(`L·ªói khi import d·ªØ li·ªáu: ${error.message}`);
                    });
                } catch (error) {
                    console.error('Error:', error);
                    alert(`L·ªói khi x·ª≠ l√Ω file JSON: ${error.message}`);
                }
            };
            reader.readAsText(file);
            closeImportModal();
        }

        // Bulk Operations
        function selectAllTeams() {
            const selectAll = document.getElementById('selectAll');
            const checkboxes = document.querySelectorAll('.team-checkbox');
            checkboxes.forEach(cb => cb.checked = selectAll.checked);
        }

        function bulkDeleteTeams() {
            const selectedTeams = Array.from(document.querySelectorAll('.team-checkbox:checked')).map(cb => cb.value);
            
            if (selectedTeams.length === 0) {
                alert('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt ƒë·ªôi ƒë·ªÉ x√≥a!');
                return;
            }

            if (confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ${selectedTeams.length} ƒë·ªôi ƒë√£ ch·ªçn? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!`)) {
                Promise.all(selectedTeams.map(teamId => 
                    fetch(`/admin/teams/${teamId}/delete`, { 
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' }
                    })
                ))
                .then(responses => Promise.all(responses.map(res => res.json())))
                .then(results => {
                    if (results.every(r => r.success)) {
                        alert('ƒê√£ x√≥a c√°c ƒë·ªôi th√†nh c√¥ng! ƒêang t·∫£i l·∫°i trang...');
                        window.location.reload();
                    } else {
                        throw new Error('M·ªôt s·ªë ƒë·ªôi kh√¥ng th·ªÉ x√≥a');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert(`L·ªói khi x√≥a c√°c ƒë·ªôi: ${error.message}`);
                });
            }
        }

        function loadStats() {
            try {
                fetch('/admin/stats')
                .then(response => {
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                    return response.json();
                })
                .then(data => {
                    const totalVotes = data.totalVotes || 0;
                    const voterCount = data.voterCount || 0;
                    const teamStats = data.teamStats || {};

                    // Update total votes
                    document.getElementById('totalVotes').textContent = totalVotes;

                    // Update votes for each team
                    teamsData.forEach(team => {
                        const voteElement = document.getElementById(`votes-${team._id}`);
                        if (voteElement) {
                            voteElement.textContent = teamStats[team._id]?.votes || 0;
                        }
                    });

                    // Update stats container
                    document.getElementById('statsContainer').innerHTML = `
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                            <div class="bg-blue-500/20 backdrop-blur-lg rounded-2xl p-6 border border-blue-300/30">
                                <div class="flex items-center">
                                    <i class="fas fa-vote-yea text-3xl text-blue-300 mr-4"></i>
                                    <div>
                                        <div class="text-3xl font-bold text-white">${totalVotes}</div>
                                        <div class="text-blue-200 text-sm">T·ªïng s·ªë votes</div>
                                    </div>
                                </div>
                            </div>
                            <div class="bg-green-500/20 backdrop-blur-lg rounded-2xl p-6 border border-green-300/30">
                                <div class="flex items-center">
                                    <i class="fas fa-users text-3xl text-green-300 mr-4"></i>
                                    <div>
                                        <div class="text-3xl font-bold text-white">${voterCount}</div>
                                        <div class="text-green-200 text-sm">Ng∆∞·ªùi b√¨nh ch·ªçn</div>
                                    </div>
                                </div>
                            </div>
                            <div class="bg-purple-500/20 backdrop-blur-lg rounded-2xl p-6 border border-purple-300/30">
                                <div class="flex items-center">
                                    <i class="fas fa-trophy text-3xl text-purple-300 mr-4"></i>
                                    <div>
                                        <div class="text-3xl font-bold text-white">${teamsData.length}</div>
                                        <div class="text-purple-200 text-sm">ƒê·ªôi thi</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="bg-white rounded-xl overflow-hidden">
                            <table class="w-full">
                                <thead class="bg-gradient-to-r from-gray-600 to-gray-700 text-white">
                                    <tr>
                                        <th class="px-4 py-3 text-left">ƒê·ªôi thi</th>
                                        <th class="px-4 py-3 text-center">S·ªë votes</th>
                                        <th class="px-4 py-3 text-center">T·ª∑ l·ªá</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${teamsData.map(team => `
                                        <tr class="border-b border-gray-100">
                                            <td class="px-4 py-3 font-medium text-gray-800">${team.name}</td>
                                            <td class="px-4 py-3 text-center">
                                                <span class="inline-flex items-center px-2 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                                    ${teamStats[team._id]?.votes || 0}
                                                </span>
                                            </td>
                                            <td class="px-4 py-3 text-center text-gray-600">
                                                ${totalVotes > 0 ? ((teamStats[team._id]?.votes || 0) / totalVotes * 100).toFixed(1) : 0}%
                                            </td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    `;
                })
                .catch(error => {
                    console.error('Error loading stats:', error);
                    document.getElementById('statsContainer').innerHTML = `
                        <div class="text-center text-red-400">
                            <i class="fas fa-exclamation-triangle text-4xl mb-4"></i>
                            <p>L·ªói khi t·∫£i th·ªëng k√™: ${error.message}. Vui l√≤ng th·ª≠ l·∫°i.</p>
                        </div>
                    `;
                });
            } catch (error) {
                console.error('Error loading stats:', error);
                document.getElementById('statsContainer').innerHTML = `
                    <div class="text-center text-red-400">
                        <i class="fas fa-exclamation-triangle text-4xl mb-4"></i>
                        <p>L·ªói khi t·∫£i th·ªëng k√™: ${error.message}. Vui l√≤ng th·ª≠ l·∫°i.</p>
                    </div>
                `;
            }
        }

        // Initialize edit buttons
        document.addEventListener('DOMContentLoaded', () => {
            loadStats();
            document.querySelectorAll('.edit-team-btn').forEach(button => {
                button.addEventListener('click', () => {
                    const id = button.dataset.teamId;
                    const name = button.dataset.teamName;
                    const description = button.dataset.teamDescription;
                    editTeam(id, name, description);
                });
            });
        });

        // Close modals when clicking outside
        document.getElementById('editTeamModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeEditModal();
            }
        });

        document.getElementById('importModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeImportModal();
            }
        });

        // Select all checkbox handler
        document.getElementById('selectAll').addEventListener('change', selectAllTeams);

        console.log('‚úÖ Admin page loaded successfully!');
    </script>
</body>
</html>
