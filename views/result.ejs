<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>K·∫øt qu·∫£ b√¨nh ch·ªçn</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="min-h-screen bg-gradient-to-br from-violet-600 via-purple-600 to-indigo-600">
    <div class="min-h-screen py-8 px-4">
        <div class="max-w-7xl mx-auto">
            <!-- Header -->
            <div class="text-center mb-12">
                <div class="flex items-center justify-between mb-8">
                    <a href="/" class="inline-flex items-center bg-white/20 backdrop-blur-lg rounded-full px-6 py-3 text-white hover:bg-white/30 transition-all duration-300">
                        <i class="fas fa-home mr-2"></i>Trang ch·ªß
                    </a>
                    
                    <h1 class="text-4xl md:text-6xl font-bold text-white">
                        üìä K·∫øt qu·∫£ b√¨nh ch·ªçn
                    </h1>
                    
                    <button id="refreshBtn" class="inline-flex items-center bg-white/20 backdrop-blur-lg rounded-full px-6 py-3 text-white hover:bg-white/30 transition-all duration-300">
                        <i class="fas fa-sync-alt mr-2"></i>L√†m m·ªõi
                    </button>
                </div>
                
                <!-- Live Update Indicator -->
                <div class="inline-flex items-center bg-green-500/20 backdrop-blur-lg rounded-full px-4 py-2 border border-green-300/30">
                    <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse mr-2"></div>
                    <span class="text-green-100 text-sm">C·∫≠p nh·∫≠t realtime</span>
                    <span id="lastUpdate" class="text-green-200 text-xs ml-2"></span>
                </div>
            </div>

            <% if (teams.length === 0) { %>
                <div class="max-w-md mx-auto">
                    <div class="bg-yellow-500/20 backdrop-blur-lg rounded-3xl p-8 border border-yellow-300/30 text-center">
                        <i class="fas fa-exclamation-triangle text-6xl text-yellow-300 mb-6"></i>
                        <h2 class="text-2xl font-bold text-white mb-4">Ch∆∞a c√≥ ƒë·ªôi thi n√†o!</h2>
                        <p class="text-yellow-100 mb-6">Vui l√≤ng v√†o trang Admin ƒë·ªÉ th√™m ƒë·ªôi thi.</p>
                        <a href="/admin" class="inline-block bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-8 rounded-full transition-all duration-300 transform hover:scale-105">
                            <i class="fas fa-plus mr-2"></i>Th√™m ƒë·ªôi thi
                        </a>
                    </div>
                </div>
            <% } else { %>
                <!-- Chart Section -->
                <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 shadow-2xl mb-8">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-2xl font-bold text-white">üèÜ Bi·ªÉu ƒë·ªì k·∫øt qu·∫£</h2>
                        <div class="text-sm text-purple-200">
                            <i class="fas fa-chart-line mr-1"></i>
                            C·∫≠p nh·∫≠t t·ª± ƒë·ªông m·ªói 3 ph√∫t
                        </div>
                    </div>
                    
                    <div class="bg-white rounded-2xl p-6">
                        <canvas id="voteChart" width="400" height="200"></canvas>
                    </div>
                </div>
                
                <!-- Statistics Cards -->
                <div id="voteStats" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    <!-- Stats will be populated by JavaScript -->
                </div>
                
                <!-- Detailed Table -->
                <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20 shadow-2xl">
                    <h3 class="text-2xl font-bold text-white mb-6">üìã Chi ti·∫øt k·∫øt qu·∫£</h3>
                    <div id="detailedTable" class="overflow-hidden rounded-xl">
                        <!-- Table will be populated by JavaScript -->
                    </div>
                </div>
            <% } %>
        </div>
    </div>

    <script>
        const socket = io();
        let chart;

        // Initialize chart with modern styling
        function initChart(data) {
            console.log('üé® Initializing chart with data:', data);
            
            if (!data || data.length === 0) {
                console.log('‚ö†Ô∏è No data to display in chart');
                document.getElementById('voteChart').style.display = 'none';
                return;
            }
            
            const ctx = document.getElementById('voteChart').getContext('2d');
            
            if (chart) {
                console.log('üîÑ Destroying existing chart');
                chart.destroy();
            }

            // Generate gradient colors
            const colors = data.map((_, index) => {
                const hue = (index * 137.5) % 360; // Golden angle for better color distribution
                return {
                    bg: `hsla(${hue}, 70%, 60%, 0.8)`,
                    border: `hsla(${hue}, 70%, 50%, 1)`
                };
            });

            chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.map(item => item.teamName),
                    datasets: [{
                        label: 'S·ªë l∆∞·ª£t b√¨nh ch·ªçn',
                        data: data.map(item => item.count),
                        backgroundColor: colors.map(c => c.bg),
                        borderColor: colors.map(c => c.border),
                        borderWidth: 3,
                        borderRadius: 8,
                        borderSkipped: false,
                    }]
                },
                plugins: [ChartDataLabels],
                options: {
                    responsive: true,
                    layout: {
                        padding: {
                            top: 40
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        title: {
                            display: false
                        },
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            offset: 10,
                            formatter: function(value) {
                                return value > 0 ? value : '';
                            },
                            font: {
                                weight: 'bold',
                                size: 18
                            },
                            color: '#1f2937'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1,
                                font: {
                                    size: 12
                                }
                            },
                            grid: {
                                color: 'rgba(0,0,0,0.1)'
                            }
                        },
                        x: {
                            ticks: {
                                font: {
                                    size: 16,
                                    weight: 'bold'
                                }
                            },
                            grid: {
                                display: false
                            }
                        }
                    },
                    animation: {
                        duration: 1000,
                        easing: 'easeInOutQuart'
                    }
                }
            });
        }

        // Update statistics cards
        function updateStats(data) {
            console.log('üìä Updating stats with data:', data);
            
            if (!data || data.length === 0) {
                console.log('‚ö†Ô∏è No data for stats');
                document.getElementById('voteStats').innerHTML = `
                    <div class="col-span-full bg-yellow-500/20 backdrop-blur-lg rounded-2xl p-6 border border-yellow-300/30 text-center">
                        <i class="fas fa-info-circle text-3xl text-yellow-300 mb-4"></i>
                        <div class="text-white font-bold">Ch∆∞a c√≥ d·ªØ li·ªáu b√¨nh ch·ªçn</div>
                        <div class="text-yellow-200 text-sm">H√£y b·∫Øt ƒë·∫ßu b√¨nh ch·ªçn ƒë·ªÉ xem k·∫øt qu·∫£</div>
                    </div>
                `;
                return;
            }
            
            const totalVotes = data.reduce((sum, item) => sum + item.count, 0);
            const maxVotes = Math.max(...data.map(item => item.count));
            const leader = data.find(item => item.count === maxVotes);
            
            console.log('üìà Stats calculated:', { totalVotes, maxVotes, leader: leader?.teamName });
            
            document.getElementById('voteStats').innerHTML = `
                <div class="bg-blue-500/20 backdrop-blur-lg rounded-2xl p-6 border border-blue-300/30">
                    <div class="flex items-center">
                        <i class="fas fa-vote-yea text-3xl text-blue-300 mr-4"></i>
                        <div>
                            <div class="text-3xl font-bold text-white">${totalVotes}</div>
                            <div class="text-blue-200 text-sm">T·ªïng l∆∞·ª£t vote</div>
                        </div>
                    </div>
                </div>
                
                <div class="bg-green-500/20 backdrop-blur-lg rounded-2xl p-6 border border-green-300/30">
                    <div class="flex items-center">
                        <i class="fas fa-users text-3xl text-green-300 mr-4"></i>
                        <div>
                            <div class="text-3xl font-bold text-white">${data.length}</div>
                            <div class="text-green-200 text-sm">ƒê·ªôi tham gia</div>
                        </div>
                    </div>
                </div>
                
                <div class="bg-yellow-500/20 backdrop-blur-lg rounded-2xl p-6 border border-yellow-300/30">
                    <div class="flex items-center">
                        <i class="fas fa-crown text-3xl text-yellow-300 mr-4"></i>
                        <div>
                            <div class="text-2xl font-bold text-white truncate">${leader ? leader.teamName : 'N/A'}</div>
                            <div class="text-yellow-200 text-sm">ƒêang d·∫´n ƒë·∫ßu</div>
                        </div>
                    </div>
                </div>
                
                <div class="bg-purple-500/20 backdrop-blur-lg rounded-2xl p-6 border border-purple-300/30">
                    <div class="flex items-center">
                        <i class="fas fa-trophy text-3xl text-purple-300 mr-4"></i>
                        <div>
                            <div class="text-3xl font-bold text-white">${maxVotes}</div>
                            <div class="text-purple-200 text-sm">Votes cao nh·∫•t</div>
                        </div>
                    </div>
                </div>
            `;
        }

        // Update detailed table
        function updateDetailedTable(data) {
            console.log('üìã Updating detailed table with data:', data);
            
            if (!data || data.length === 0) {
                console.log('‚ö†Ô∏è No data for detailed table');
                document.getElementById('detailedTable').innerHTML = `
                    <div class="bg-white rounded-xl p-8 text-center">
                        <i class="fas fa-table text-4xl text-gray-400 mb-4"></i>
                        <div class="text-gray-600 font-bold">Ch∆∞a c√≥ d·ªØ li·ªáu</div>
                        <div class="text-gray-500 text-sm">B·∫£ng chi ti·∫øt s·∫Ω hi·ªÉn th·ªã khi c√≥ b√¨nh ch·ªçn</div>
                    </div>
                `;
                return;
            }
            
            const totalVotes = data.reduce((sum, item) => sum + item.count, 0);
            console.log('üìä Total votes for table:', totalVotes);
            
            document.getElementById('detailedTable').innerHTML = `
                <table class="w-full bg-white rounded-xl overflow-hidden">
                    <thead class="bg-gradient-to-r from-indigo-500 to-purple-600 text-white">
                        <tr>
                            <th class="px-6 py-4 text-left font-bold">H·∫°ng</th>
                            <th class="px-6 py-4 text-left font-bold">ƒê·ªôi thi</th>
                            <th class="px-6 py-4 text-center font-bold">S·ªë votes</th>
                            <th class="px-6 py-4 text-center font-bold">T·ª∑ l·ªá</th>
                            <th class="px-6 py-4 text-center font-bold">Bi·ªÉu ƒë·ªì</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${data.map((team, index) => {
                            const percentage = totalVotes > 0 ? (team.count / totalVotes * 100) : 0;
                            const isLeader = index === 0 && team.count > 0;
                            return `
                                <tr class="border-b border-gray-100 hover:bg-gray-50 transition-colors duration-200">
                                    <td class="px-6 py-4">
                                        <div class="flex items-center">
                                            ${isLeader ? '<i class="fas fa-crown text-yellow-500 mr-2"></i>' : ''}
                                            <span class="font-bold text-xl ${isLeader ? 'text-yellow-600' : 'text-gray-700'}">#${index + 1}</span>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="font-semibold text-gray-800">${team.teamName}</div>
                                    </td>
                                    <td class="px-6 py-4 text-center">
                                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                            ${team.count}
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 text-center">
                                        <span class="font-semibold text-gray-700">${percentage.toFixed(1)}%</span>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="w-full bg-gray-200 rounded-full h-2">
                                            <div class="bg-gradient-to-r from-blue-500 to-purple-600 h-2 rounded-full transition-all duration-500" style="width: ${percentage}%"></div>
                                        </div>
                                    </td>
                                </tr>
                            `;
                        }).join('')}
                    </tbody>
                </table>
            `;
        }

        // Fetch and update data
        async function updateData() {
            try {
                console.log('üîÑ Fetching vote data...');
                const response = await fetch('/result/api/data');
                console.log('üì° API Response status:', response.status);
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                
                const data = await response.json();
                console.log('üìä Received data:', data);
                
                if (!Array.isArray(data)) {
                    throw new Error('Invalid data format received');
                }
                
                // Sort by vote count (descending)
                data.sort((a, b) => b.count - a.count);
                console.log('üìà Sorted data:', data);
                
                initChart(data);
                updateStats(data);
                updateDetailedTable(data);
                
                console.log('‚úÖ Data update completed successfully');
                
                // Update timestamp
                document.getElementById('lastUpdate').textContent = 
                    `${new Date().toLocaleTimeString('vi-VN')}`;
                    
            } catch (error) {
                console.error('‚ùå Error fetching data:', error);
                // Show error message to user
                document.getElementById('voteStats').innerHTML = `
                    <div class="col-span-full bg-red-500/20 backdrop-blur-lg rounded-2xl p-6 border border-red-300/30 text-center">
                        <i class="fas fa-exclamation-triangle text-3xl text-red-300 mb-4"></i>
                        <div class="text-white font-bold">L·ªói khi t·∫£i d·ªØ li·ªáu</div>
                        <div class="text-red-200 text-sm mt-2">${error.message}</div>
                        <button onclick="updateData()" class="mt-4 bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition-all duration-300">
                            <i class="fas fa-redo mr-2"></i>Th·ª≠ l·∫°i
                        </button>
                    </div>
                `;
            }
        }

        // Event listeners
        document.getElementById('refreshBtn').addEventListener('click', updateData);

        // Socket.io events
        socket.on('voteUpdate', () => {
            updateData();
        });

        // Initial load
        updateData();

        // Auto refresh every 3 minutes as backup
        setInterval(updateData, 180000);
    </script>
</body>
</html>
