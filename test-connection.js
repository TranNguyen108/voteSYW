require('dotenv').config();
const mongoose = require('mongoose');

// Test MongoDB Atlas connection
async function testConnection() {
    try {
        console.log('üîå ƒêang test k·∫øt n·ªëi MongoDB Atlas...');
        console.log('Connection string:', process.env.MONGODB_URI?.replace(/:[^@]+@/, ':****@'));
        
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ K·∫øt n·ªëi MongoDB Atlas th√†nh c√¥ng!');
        
        // Test create a simple document
        const testSchema = new mongoose.Schema({ test: String });
        const TestModel = mongoose.model('Test', testSchema);
        
        const testDoc = new TestModel({ test: 'H·ªá th·ªëng voting ho·∫°t ƒë·ªông!' });
        await testDoc.save();
        console.log('‚úÖ Test ghi d·ªØ li·ªáu th√†nh c√¥ng!');
        
        await TestModel.deleteOne({ _id: testDoc._id });
        console.log('‚úÖ Test x√≥a d·ªØ li·ªáu th√†nh c√¥ng!');
        
        console.log('üéâ MongoDB Atlas s·∫µn s√†ng s·ª≠ d·ª•ng!');
        
    } catch (error) {
        console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB Atlas:');
        console.error('Error:', error.message);
        
        if (error.message.includes('authentication failed')) {
            console.log('\nüí° Gi·∫£i ph√°p:');
            console.log('1. Ki·ªÉm tra username/password trong connection string');
            console.log('2. ƒê·∫£m b·∫£o user c√≥ quy·ªÅn readWrite tr√™n database');
            console.log('3. Ki·ªÉm tra IP whitelist trong MongoDB Atlas');
        }
        
        if (error.message.includes('ENOTFOUND')) {
            console.log('\nüí° Gi·∫£i ph√°p:');
            console.log('1. Ki·ªÉm tra cluster URL trong connection string');
            console.log('2. ƒê·∫£m b·∫£o cluster ƒëang ho·∫°t ƒë·ªông');
            console.log('3. Ki·ªÉm tra k·∫øt n·ªëi internet');
        }
        
    } finally {
        await mongoose.disconnect();
        console.log('üîå ƒê√£ ng·∫Øt k·∫øt n·ªëi');
    }
}

if (require.main === module) {
    testConnection();
}
